% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{Rcpp_ModelTransient}
\alias{Rcpp_ModelTransient}
\alias{ModelTransient}
\alias{Rcpp_ModelTransient-class}
\title{ModelTransient Class}
\description{
Internal representation for multi-server job model with random speed scaling for transient analysis.
}
\section{Slots}{

\describe{
\item{\code{h}}{- Returns current step size.}

\item{\code{mean_clients.}}{\itemize{
\item Parameter: max_time - maximum time for which you want to calculate mean customers in system;
\item Parameter: pi_0 - list of vectors contains distribution at zero time.
\item Returns: mean clients in system.
}}

\item{\code{mean_queue}}{\itemize{
\item Parameter: max_time - maximum time for which you want to calculate mean queue length;
\item Parameter: pi_0 - list of vectors contains distribution at zero time.
\item Returns: mean queue length
}}

\item{\code{distribution}}{\itemize{
\item Parameter: max_time - maximum level for which you want to calculate distribution;
\item Parameter: pi_0 - list of vectors contains distribution at zero time.
\item Returns: list of lists of vectors containing transient distribution.
}}
}}

\examples{
# M/M/1 model
lambda = 1.5
mu = 2
t = 80
library(MJMrss)
N = 1 # Number of servers
f = c(mu) # Speed (frequency)
P_a = matrix(c(1), nrow = 1, byrow = TRUE)
P_d = matrix(c(1), nrow = 1, byrow = TRUE)
classes = matrix(c(1,# j  
                   1,# p_j
                   1), # mu_j
                 nrow = 3, byrow = TRUE)
# use 2 threads for computatuion
set_num_of_threads(2)
m = build_model(lambda, N, classes, f, P_a, P_d)
trans = m$transient_analysis(10, -1)
# At zero time in system 3 clients:
cl = trans$mean_clients(t, list(c(0),c(0),c(0),c(1)))
plot((1:length(cl)-1)*trans$h, cl)
\dontrun{
library(queueing)
i_mm1 <- NewInput.MM1(lambda, mu)
o_mm1 <- QueueingModel(i_mm1)
L(o_mm1)
}
}
